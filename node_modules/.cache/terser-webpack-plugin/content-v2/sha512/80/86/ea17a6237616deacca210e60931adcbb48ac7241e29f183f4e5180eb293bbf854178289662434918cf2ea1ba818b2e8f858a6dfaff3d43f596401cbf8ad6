{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{177:function(t,e,r){\"use strict\";r.r(e);var _=r(0),i=Object(_.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"div\",{staticClass:\"content\"},[t._m(0),t._v(\" \"),t._m(1),t._v(\" \"),r(\"p\",[t._v(\"随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，亟需一个治理系统确保架构有条不紊的演进。\")]),t._v(\" \"),t._m(2),t._v(\" \"),t._m(3),t._v(\" \"),r(\"p\",[t._v(\"了解 dubbo 之前，了解一下什么是 RPC？\")]),t._v(\" \"),t._m(4),t._v(\" \"),t._m(5),t._v(\" \"),t._m(6),t._v(\" \"),t._m(7),t._v(\" \"),t._m(8),t._v(\" \"),t._m(9),t._v(\" \"),r(\"p\",[r(\"strong\",[t._v(\"dubbo架构图：\")]),t._v(\" \"),r(\"img\",{attrs:{src:t.$withBase(\"/dubbo/1.png\"),alt:\"dock\"}})]),t._v(\" \"),t._m(10),t._v(\" \"),t._m(11),t._v(\" \"),r(\"p\",[t._v(\"调用关系说明：\")]),t._v(\" \"),t._m(12),t._v(\" \"),t._m(13),t._v(\" \"),t._m(14),t._v(\" \"),t._m(15),t._v(\" \"),r(\"ul\",[r(\"li\",[r(\"p\",[r(\"a\",{attrs:{href:\"https://www.apache.org/dyn/closer.cgi/zookeeper/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"官网\"),r(\"OutboundLink\")],1),t._v(\"进入，选择HTTP点击下载ZIP包（本文下载的3.4.14版本）。\")])]),t._v(\" \"),t._m(16),t._v(\" \"),t._m(17),t._v(\" \"),t._m(18)]),t._v(\" \"),t._m(19),t._v(\" \"),t._m(20),t._v(\" \"),r(\"p\",[t._v(\"到此阶段，Dubbo需要的环境以及依赖安装就已经完成了，可以后续进行项目开发。\")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"服务治理——dubbo运用\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#服务治理——dubbo运用\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 服务治理——Dubbo运用\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"背景介绍\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#背景介绍\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 背景介绍\")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ul\",[r(\"li\",[r(\"p\",[t._v(\"单一应用架构\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架(ORM)是关键。\")])])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"垂直应用架构\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"当访问量逐渐增大， 单一应用增加机器带来的加速度越来越小， 将应用拆成互不相干的几个应用，以提升效率。此时，用于加速前端页面开发的 Web 框架(MVC)是关键。\")])])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"分布式服务架构\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。此时，用于提高业务复用及整合的分布式服务框架(RPC)是关键。\")])])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"流动计算架构\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。此时，用于提高机器利用率的资源调度和治理中心\\n(SOA)是关键\")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"什么是dubbo\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是dubbo\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 什么是Dubbo\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ul\",[e(\"li\",[this._v(\"RPC(Remote Procedure Call Protocol)：远程过程调用。 两台服务器 A、B，分别部署不同的应用a,b。当应用 a 需要调用应用 b 提供的函数或方法的时候，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义传达调用的数据。\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"rpc需要解决的问题\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rpc需要解决的问题\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" RPC需要解决的问题\")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ul\",[r(\"li\",[r(\"p\",[r(\"strong\",[t._v(\"通讯问题\")]),t._v(\"：主要是通过在客户端和服务器之间建立 TCP 连接，远程过程调用的所有交换的数据都在这个连接里传输。连接可以是按需连接，调用结束后就断掉，也可以是长连接，多个远程过程调用共享同一个连接。\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[r(\"strong\",[t._v(\"寻址问题\")]),t._v(\" ：A 服务器上的应用怎么告诉底层的 RPC 框架，如何连接到 B 服务器（如主机或 IP 地址）以及特定的端口，方法的名称名称是什么，这样才能完成调用。比如基于 Web 服务协议栈的 RPC，就要提供一个 endpoint URI，或者是从 UDDI 服务上查找。如果是 RMI 调用的话，还需要一个 RMI Registry 来注册服务的地址。\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[r(\"strong\",[t._v(\"序列化与反序列化\")]),t._v(\"：当 A 服务器上的应用发起远程过程调用时， 方法的参数需要通过底层的网络协议如 TCP 传递到 B\\n服务器，由于网络协议是基于二进制的，内存中的参数的值要序列化成二进制的形式，也就是序列化（Serialize）或编组（marshal），通过寻址和传输将序列化的二进制发送给 B 服务器。 同理，B 服务器接收参数要将参数反序列化。B 服务器应用调用自己的方法处理后返回的结果也要序列化给 A 服务器，A 服务器接收也要经过反序列化的过程。\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"dubbo简介\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dubbo简介\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Dubbo简介\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"strong\",[this._v(\"dubbo是：\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ul\",[e(\"li\",[this._v(\"一款分布式服务框架\")]),this._v(\" \"),e(\"li\",[this._v(\"高性能和透明的RPC远程调用方案\")]),this._v(\" \"),e(\"li\",[this._v(\"SOA服务治理方案\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"strong\",[this._v(\"dubbo包含几部分：\")])])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ul\",[r(\"li\",[t._v(\"Provider：暴露服务的提供方\")]),t._v(\" \"),r(\"li\",[t._v(\"Consumer: 调用远程服务的服务消费方\")]),t._v(\" \"),r(\"li\",[t._v(\"Registry: 服务注册和发现中心\")]),t._v(\" \"),r(\"li\",[t._v(\"Monitor: 统计服务的调用次数和调用时间的监控中心\")]),t._v(\" \"),r(\"li\",[t._v(\"Container: 服务运行容器\")])])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ul\",[r(\"li\",[r(\"ol\",{attrs:{start:\"0\"}},[r(\"li\",[t._v(\"服务容器负责启动，加载，运行服务提供者。\")])])]),t._v(\" \"),r(\"li\",[r(\"ol\",[r(\"li\",[t._v(\"服务提供者在启动时，向注册中心注册自己提供的服务。\")])])]),t._v(\" \"),r(\"li\",[r(\"ol\",{attrs:{start:\"2\"}},[r(\"li\",[t._v(\"服务消费者在启动时，向注册中心订阅自己所需的服务。\")])])]),t._v(\" \"),r(\"li\",[r(\"ol\",{attrs:{start:\"3\"}},[r(\"li\",[t._v(\"注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。\")])])]),t._v(\" \"),r(\"li\",[r(\"ol\",{attrs:{start:\"4\"}},[r(\"li\",[t._v(\"服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。\")])])]),t._v(\" \"),r(\"li\",[r(\"ol\",{attrs:{start:\"5\"}},[r(\"li\",[t._v(\"服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。\")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"环境准备（window-环境）\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#环境准备（window-环境）\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 环境准备（window 环境）\")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ul\",[r(\"li\",[t._v(\"git _下载项目\")]),t._v(\" \"),r(\"li\",[t._v(\"maven _后端打包\")]),t._v(\" \"),r(\"li\",[t._v(\"jdk _运行jar\")]),t._v(\" \"),r(\"li\",[t._v(\"node _npm下载包\")]),t._v(\" \"),r(\"li\",[t._v(\"webpack _前端打包\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"下载zookeeper并配置启动\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#下载zookeeper并配置启动\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 下载zookeeper并配置启动\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"li\",[e(\"p\",[this._v(\"解压到本地后，找到conf文件夹，修改zoo_sample.cfg中\"),e(\"code\",[this._v(\"dataDir\")]),this._v(\"指向本地安装路径。（本例子dataDir=D:\\\\dubboSoft\\\\zookeeper-3.4.14）\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"li\",[e(\"p\",[this._v(\"修改bin目录下zkEnv.cmd中ZOOCFG指向刚修改的zoo_sample.cfg文件(set ZOOCFG=%ZOOCFGDIR%\\\\zoo_sample.cfg)\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"li\",[e(\"p\",[this._v(\"点击zkServive.cmd和zkCli.cmd启动。\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"下载dubbo——前后端构建打包启动\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#下载dubbo——前后端构建打包启动\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 下载Dubbo——前后端构建打包启动\")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ul\",[r(\"li\",[r(\"p\",[t._v(\"git 克隆 dubbo代码 \"),r(\"code\",[t._v(\"git clone https://github.com/apache/dubbo-admin\")])])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"dubbo-admin-server 目录下 cmd 运行 \"),r(\"code\",[t._v(\"mvn package\")]),t._v(\"打包 dubbo-admin-server模块，会在此文件夹下target生成jar包。\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"进入jar包所在target目录,cmd 运行命令 \"),r(\"code\",[t._v(\"java -jar dubbo-admin-server-0.1.jar\")]),t._v(\" 启动jar，之后访问 http://localhost:8080/swagger-ui.html 成功代表后端启动成功。\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"dubbo-admin-ui 目录下 cmd 运行命令 \"),r(\"code\",[t._v(\"npm i\")]),t._v(\"对前端进行打包。\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"完成后 \"),r(\"code\",[t._v(\"npm run dev\")]),t._v(\"启动前端项目，访问  http://localhost:8081 进入Dubbo后台管理页面。\")])])])}],!1,null,null,null);e.default=i.exports}}]);","extractedComments":[]}