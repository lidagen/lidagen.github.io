{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{224:function(n,e,t){\"use strict\";t.r(e);var s=t(0),a=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t(\"div\",{staticClass:\"content\"},[t(\"h2\",{attrs:{id:\"nginx-安装、常用命令和配置文件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx-安装、常用命令和配置文件\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" nginx 安装、常用命令和配置文件\")]),n._v(\" \"),t(\"h3\",{attrs:{id:\"nginx-centos中的安装\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx-centos中的安装\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" \"),t(\"strong\",[n._v(\"nginx centOS中的安装\")])]),n._v(\" \"),t(\"h4\",{attrs:{id:\"环境配置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#环境配置\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" 环境配置\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"检查安装 \"),t(\"strong\",[n._v(\"gcc\")])])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"# 检查是否安装\\ngcc -v\\n# centos安装\\nyum install gcc-c++ \\n\")])])]),t(\"ul\",[t(\"li\",[t(\"strong\",[n._v(\"安装PCRE pcre-devel：\")]),n._v(\"\\nNginx的Rewrite模块和HTTP核心模块会使用到PCRE正则表达式语法。这里需要安装两个安装包pcre和pcre-devel。第一个安装包提供编译版本的库，而第二个提供开发阶段的头文件和编译项目的源代码。安装指令如下：\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"yum install -y pcre pcre-devel\\n\")])])]),t(\"ul\",[t(\"li\",[n._v(\"安装\"),t(\"strong\",[n._v(\"zlib：\")]),n._v(\",zlib库提供了开发人员的压缩算法，在Nginx的各种模块中需要使用gzip压缩。安装指令如下:\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"yum install -y zlib zlib-devel\\n\")])])]),t(\"ul\",[t(\"li\",[n._v(\"安装\"),t(\"strong\",[n._v(\"Open SSL：\")]),n._v(\"，nginx不仅支持 http协议，还支持 https（即在 ssl 协议上传输 http），如果使用了 https，需要安装 OpenSSL 库。安装指令如下：\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"yum install -y openssl openssl-devel\\n\")])])]),t(\"h4\",{attrs:{id:\"安装nginx\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装nginx\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" 安装nginx\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"wget命令下载\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"wget -c https://nginx.org/download/nginx-1.11.6.tar.gz\\n\")])])]),t(\"ul\",[t(\"li\",[n._v(\"解压文件到/usr/local/nginx目录下\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"sudo tar -zxvf /压缩包路径/nginx-1.11.6.tar.gz /usr/local/nginx\\n\")])])]),t(\"ul\",[t(\"li\",[n._v(\"进入安装的目录,进行默认配置\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"cd /usr/local/nginx\\n./configure\\n\")])])]),t(\"ul\",[t(\"li\",[n._v(\"编译安装nginx\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"# /usr/local/nginx目录下\\nmake\\n\")])])]),t(\"ul\",[t(\"li\",[n._v(\"安装\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"# /usr/local/nginx目录下\\nmake install\\n\")])])]),t(\"ul\",[t(\"li\",[n._v(\"配置nginx.conf（不修改默认访问地址localhost:80）\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"cd /usr/local/nginx/conf\\nvim nginx.conf\\n\")])])]),t(\"ul\",[t(\"li\",[n._v(\"启动\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"cd /usr/local/nginx/sbin\\n./nginx\\n\")])])]),t(\"h3\",{attrs:{id:\"nginx-常用命令\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx-常用命令\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" \"),t(\"strong\",[n._v(\"nginx 常用命令\")])]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"nginx的命令，都需要进入到nginx安装目录下的/sbin下执行\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"# 查看版本\\n./nginx -v\\n# 查看版本详细参数\\n./nginx -V\\n# 查看帮助\\n./nginx -h\\n# 检查nginx配置文件\\n./nginx -t\\n# 指定配置文件\\n./nginx -c filename\\n\\n# 启动\\n./nginx\\n# 优雅停机\\n./nginx -s quit  \\n# 优雅重启\\n./nginx -s reload\\n# 重新打开日志文件，一半用于切割日志\\n./nginx -s reopen\\n\")])])]),t(\"h3\",{attrs:{id:\"nginx-conf-配置文件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx-conf-配置文件\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" \"),t(\"strong\",[n._v(\"nginx.conf 配置文件\")])]),n._v(\" \"),t(\"h4\",{attrs:{id:\"以下是默认的配置：\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#以下是默认的配置：\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" 以下是默认的配置：\")]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"#user  nobody;\\nworker_processes  1;\\n\\n#error_log  logs/error.log;\\n#error_log  logs/error.log  notice;\\n#error_log  logs/error.log  info;\\n\\n#pid        logs/nginx.pid;\\n\\n\\nevents {\\n    worker_connections  1024;\\n}\\n\\n\\nhttp {\\n    include       mime.types;\\n    default_type  application/octet-stream;\\n\\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \\\"$request\\\" '\\n    #                  '$status $body_bytes_sent \\\"$http_referer\\\" '\\n    #                  '\\\"$http_user_agent\\\" \\\"$http_x_forwarded_for\\\"';\\n\\n    #access_log  logs/access.log  main;\\n\\n    sendfile        on;\\n    #tcp_nopush     on;\\n\\n    #keepalive_timeout  0;\\n    keepalive_timeout  65;\\n\\n    #gzip  on;\\n\\n    server {\\n        listen       80;\\n        server_name  localhost;\\n\\n        #charset koi8-r;\\n\\n        #access_log  logs/host.access.log  main;\\n\\n        location / {\\n            root   html;\\n            index  index.html index.htm;\\n        }\\n\\n        #error_page  404              /404.html;\\n\\n        # redirect server error pages to the static page /50x.html\\n        #\\n        error_page   500 502 503 504  /50x.html;\\n        location = /50x.html {\\n            root   html;\\n        }\\n\\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\\n        #\\n        #location ~ \\\\.php$ {\\n        #    proxy_pass   http://127.0.0.1;\\n        #}\\n\\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\\n        #\\n        #location ~ \\\\.php$ {\\n        #    root           html;\\n        #    fastcgi_pass   127.0.0.1:9000;\\n        #    fastcgi_index  index.php;\\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\\n        #    include        fastcgi_params;\\n        #}\\n\\n        # deny access to .htaccess files, if Apache's document root\\n        # concurs with nginx's one\\n        #\\n        #location ~ /\\\\.ht {\\n        #    deny  all;\\n        #}\\n    }\\n\\n\\n    # another virtual host using mix of IP-, name-, and port-based configuration\\n    #\\n    #server {\\n    #    listen       8000;\\n    #    listen       somename:8080;\\n    #    server_name  somename  alias  another.alias;\\n\\n    #    location / {\\n    #        root   html;\\n    #        index  index.html index.htm;\\n    #    }\\n    #}\\n\\n\\n    # HTTPS server\\n    #\\n    #server {\\n    #    listen       443 ssl;\\n    #    server_name  localhost;\\n\\n    #    ssl_certificate      cert.pem;\\n    #    ssl_certificate_key  cert.key;\\n\\n    #    ssl_session_cache    shared:SSL:1m;\\n    #    ssl_session_timeout  5m;\\n\\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\\n    #    ssl_prefer_server_ciphers  on;\\n\\n    #    location / {\\n    #        root   html;\\n    #        index  index.html index.htm;\\n    #    }\\n    #}\\n\\n}\\n\")])])]),t(\"h4\",{attrs:{id:\"nginx-主要分为以下几部分：\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx-主要分为以下几部分：\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" nginx 主要分为以下几部分：\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[n._v(\"**全局块：**配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。\")])]),n._v(\" \"),t(\"li\",[t(\"p\",[n._v(\"**events块：**配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。\")])]),n._v(\" \"),t(\"li\",[t(\"p\",[n._v(\"**http块：**可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。\")])]),n._v(\" \"),t(\"li\",[t(\"p\",[n._v(\"**server块：**配置虚拟主机的相关参数，一个http中可以有多个server。\")])]),n._v(\" \"),t(\"li\",[t(\"p\",[n._v(\"**location块：**配置请求的路由，以及各种页面的处理情况。\")])])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"########### 每个指令必须有分号结束。#################\\n#user administrator administrators;  #配置用户或者组，默认为nobody nobody。\\n#worker_processes 2;  #允许生成的进程数，默认为1\\n#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址\\nerror_log log/error.log debug;  #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg\\nevents {\\n    accept_mutex on;   #设置网路连接序列化，防止惊群现象发生，默认为on\\n    multi_accept on;  #设置一个进程是否同时接受多个网络连接，默认为off\\n    #use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport\\n    worker_connections  1024;    #最大连接数，默认为512\\n}\\nhttp {\\n    include       mime.types;   #文件扩展名与文件类型映射表\\n    default_type  application/octet-stream; #默认文件类型，默认为text/plain\\n    #access_log off; #取消服务日志    \\n    log_format myFormat '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; #自定义格式\\n    access_log log/access.log myFormat;  #combined为日志格式的默认值\\n    sendfile on;   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。\\n    sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。\\n    keepalive_timeout 65;  #连接超时时间，默认为75s，可以在http，server，location块。\\n\\n    upstream mysvr {   \\n      server 127.0.0.1:7878;\\n      server 192.168.10.121:3333 backup;  #热备\\n    }\\n    error_page 404 https://www.baidu.com; #错误页\\n    server {\\n        keepalive_requests 120; #单连接请求上限次数。\\n        listen       4545;   #监听端口\\n        server_name  127.0.0.1;   #监听地址       \\n        location  ~*^.+$ {       #请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。\\n           #root path;  #根目录\\n           #index vv.txt;  #设置默认页\\n           proxy_pass  http://mysvr;  #请求转向mysvr 定义的服务器列表\\n           deny 127.0.0.1;  #拒绝的ip\\n           allow 172.18.5.54; #允许的ip           \\n        } \\n    }\\n}\\n\")])])]),t(\"h4\",{attrs:{id:\"几个常见配置项：\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#几个常见配置项：\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" 几个常见配置项：\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"$remote_addr 与 $http_x_forwarded_for 用以记录客户端的ip地址；\")]),n._v(\" \"),t(\"li\",[n._v(\"$remote_user ：用来记录客户端用户名称；\")]),n._v(\" \"),t(\"li\",[n._v(\"$time_local ： 用来记录访问时间与时区；\")]),n._v(\" \"),t(\"li\",[n._v(\"$request ： 用来记录请求的url与http协议；\")]),n._v(\" \"),t(\"li\",[n._v(\"$status ： 用来记录请求状态；成功是200；\")]),n._v(\" \"),t(\"li\",[n._v(\"$body_bytes_s ent ：记录发送给客户端文件主体内容大小；\")]),n._v(\" \"),t(\"li\",[n._v(\"$http_referer ：用来记录从那个页面链接访问过来的；\")]),n._v(\" \"),t(\"li\",[n._v(\"$http_user_agent ：记录客户端浏览器的相关信息；\")])])])}],!1,null,null,null);e.default=a.exports}}]);","extractedComments":[]}