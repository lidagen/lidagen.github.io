{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{225:function(n,e,t){\"use strict\";t.r(e);var i=t(0),a=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t(\"div\",{staticClass:\"content\"},[t(\"h2\",{attrs:{id:\"nginx基本概念\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx基本概念\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" nginx基本概念\")]),n._v(\" \"),t(\"h3\",{attrs:{id:\"nginx是什么\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx是什么\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" nginx是什么\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器。 Nginx 主要提供反向代理、负载均衡、动静分离(静态资源服务)等服务。\")])]),n._v(\" \"),t(\"h3\",{attrs:{id:\"nginx的优点\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx的优点\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" nginx的优点\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"高并发，高性能\")]),n._v(\" \"),t(\"li\",[n._v(\"可扩展性好\")]),n._v(\" \"),t(\"li\",[n._v(\"高可靠性\")]),n._v(\" \"),t(\"li\",[n._v(\"热部署\")])]),n._v(\" \"),t(\"h3\",{attrs:{id:\"反向代理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#反向代理\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" 反向代理\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[n._v(\"说到反向代理，就要说说正向代理。\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[n._v(\"正向代理\")]),n._v(\"：某些情况下，代理我们用户去访问服务器，需要用户手动的设置代理服务器的ip和端口号。正向代理比较常见的一个例子就是 VPN了。\")]),n._v(\" \"),t(\"li\",[t(\"strong\",[n._v(\"反向代理\")]),n._v(\"： 是用来代理服务器的，代理我们要访问的目标服务器。代理服务器接受请求，然后将请求转发给内部网络的服务器，并将从服务器上得到的结果返回给客户端，此时代理服务器对外就表现为一个服务器。\")])])]),n._v(\" \"),t(\"li\",[t(\"p\",[n._v(\"正向代理是为客户端做代理，代替客户端访问服务器。反向代理是为服务器做代理，代替服务器接收客户端请求。\")])])]),n._v(\" \"),t(\"h3\",{attrs:{id:\"负载均衡\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#负载均衡\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" 负载均衡\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[n._v(\"高并发的情况下，为了减轻单台服务器模式的压力，用多台服务器集群部署共同完成工作，提高了访问吞吐量。nginx可以负责分发请求到不同的服务器。提供负载均衡功能。\")])]),n._v(\" \"),t(\"li\",[t(\"p\",[n._v(\"nginx支持的负载均衡策略有：\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"weigth(权重):通过给每个服务器设置不同的权重，从而达到接收不同的请求量。\")]),n._v(\" \"),t(\"li\",[n._v(\"ip_hash(ip hash分配):通过对ip进行hash,使对应的ip始终落在同一个服务器上（解决分布式session共享问题）。\")]),n._v(\" \"),t(\"li\",[n._v(\"fair(响应时间):让请求落在响应时间最少的服务器上。\")]),n._v(\" \"),t(\"li\",[n._v(\"url_hash(url分配):不同的url落在不同的服务器上。\")])])]),n._v(\" \"),t(\"li\",[t(\"p\",[n._v(\"weigth配置nginx\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"起两个springboot项目，localhost/hi 页面写上对应端口号，端口分别为8989和8990\")]),n._v(\" \"),t(\"li\",[n._v(\"nginx.conf配置如下\"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"worker_processes  1;\\n\\nevents {\\n    worker_connections  1024;\\n}\\n\\n\\nhttp {\\n    include       mime.types;\\n    default_type  application/octet-stream;\\n\\n    sendfile        on;\\n   \\n    keepalive_timeout  65;\\n\\n    #增加upstream配置两个服务,名字叫hello,包含两个server\\n    # 并设置不同的权重\\n    # 如果不要 weight=5字段，默认轮询的\\n    upstream hello{\\n    server 127.0.0.1:8989 weight=5;\\n    server 127.0.0.1:8990 weight=1;\\n    }\\n    server {\\n        listen       80;\\n        server_name  localhost;\\n\\n        location / {\\n            # 配置 proxy_pass 指向upstream配置的别名hello\\n            proxy_pass http://hello;\\n            root   html;\\n            index  index.html index.htm;\\n        }\\n\\n        error_page   500 502 503 504  /50x.html;\\n        location = /50x.html {\\n            root   html;\\n        }\\n\\n    }\\n\\n}\\n\\n\")])])])]),n._v(\" \"),t(\"li\",[n._v(\"./nginx -s reload重启后访问\"),t(\"code\",[n._v(\"locallost/hi\")]),n._v(\"查看不同端口号的服务器访问的次数是否跟配置的权重一致。\")])])]),n._v(\" \"),t(\"li\",[t(\"p\",[n._v(\"ip_hash配置nginx\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"起两个项目不变，修改nginx.conf\")]),n._v(\" \"),t(\"li\",[n._v(\"配置如下\")])]),n._v(\" \"),t(\"div\",{staticClass:\"language-sh extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"worker_processes  1;\\n\\n  events {\\n      worker_connections  1024;\\n  }\\n\\n\\n  http {\\n      include       mime.types;\\n      default_type  application/octet-stream;\\n\\n      sendfile        on;\\n     \\n      keepalive_timeout  65;\\n      upstream hello{\\n          #加上ip_hash就可以根据ip分配服务器，能解决session共享问题\\n          ip_hash;\\n          server 127.0.0.1:8989;\\n          server 127.0.0.1:8990;\\n      }\\n      server {\\n          listen       80;\\n          server_name  localhost;\\n\\n          location / {\\n              # 配置 proxy_pass 指向upstream配置的别名hello\\n              proxy_pass http://hello;\\n              root   html;\\n              index  index.html index.htm;\\n          }\\n\\n          error_page   500 502 503 504  /50x.html;\\n          location = /50x.html {\\n              root   html;\\n          }\\n\\n      }\\n\\n  }\\n\")])])])])]),n._v(\" \"),t(\"h3\",{attrs:{id:\"动静分离\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#动静分离\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" 动静分离\")]),n._v(\" \"),t(\"ul\",[t(\"li\",[n._v(\"动静分离是动态网站根据一定规则把不变的资源和经常变的数据分离开，放在不同的服务器上。对静态资源做缓存。使访问服务器的压力降低。\")])]),n._v(\" \"),t(\"h3\",{attrs:{id:\"nginx-keepalived-高可用\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx-keepalived-高可用\",\"aria-hidden\":\"true\"}},[n._v(\"#\")]),n._v(\" Nginx + keepalived 高可用\")])])}],!1,null,null,null);e.default=a.exports}}]);","extractedComments":[]}